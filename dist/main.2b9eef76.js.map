{
  "version": 3,
  "sources": [
    "main.js"
  ],
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "return",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "catch",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "reject",
    "_next",
    "_throw",
    "key",
    "info",
    "error",
    "_asyncToGenerator",
    "fn",
    "self",
    "args",
    "arguments",
    "apply",
    "err",
    "undefined",
    "baseURL",
    "fetchPromise",
    "fetch",
    "concat",
    "list_div",
    "document",
    "getElementsByClassName",
    "delete_dialog",
    "getElementById",
    "no_delete_dialog",
    "querySelector",
    "addEventListener",
    "close",
    "yes_delete_dialog",
    "create_update_dialog",
    "title_input",
    "author_input",
    "year_published_input",
    "ISBN_input",
    "create_button",
    "appendChild",
    "data",
    "len",
    "_loop",
    "list_cild",
    "createElement",
    "classList",
    "add",
    "style",
    "backgroundColor",
    "color",
    "serial_no",
    "width",
    "textContent",
    "title",
    "author",
    "year_published",
    "ISBN",
    "update_button",
    "showModal",
    "dialog_close_handler",
    "returnValue",
    "new_book",
    "id",
    "handle_update_book",
    "removeEventListener",
    "delete_button",
    "_ref",
    "_callee",
    "_callee$",
    "_context",
    "handle_delete_book",
    "handle_create_book",
    "response",
    "json",
    "console",
    "_ref2",
    "_callee2",
    "_callee2$",
    "_context2",
    "ok",
    "t0",
    "t1",
    "log",
    "t2",
    "_x",
    "_ref4",
    "_callee3",
    "_ref3",
    "_callee3$",
    "_context3",
    "parseInt",
    "headers",
    "body",
    "JSON",
    "stringify",
    "_x2",
    "_ref6",
    "_callee4",
    "_ref5",
    "result",
    "_callee4$",
    "_context4",
    "_x3"
  ],
  "mappings": "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",
  "file": "main.2b9eef76.js",
  "sourceRoot": "..",
  "sourcesContent": [
    "const baseURL = \"https://library-server-3i6d.onrender.com\";\n\nconst fetchPromise = fetch(`${baseURL}/api/books`);\nconst list_div = document.getElementsByClassName(\"list\");\n\n//dialog return value\nconst delete_dialog = document.getElementById(\"delete_dialog\");\n\n//no button on delete dialog button\nconst no_delete_dialog = delete_dialog.querySelector(\"#no_delete_dialog\");\nno_delete_dialog.addEventListener(\"click\", () => delete_dialog.close());\n\n//yes button on delete dialog button\nconst yes_delete_dialog = delete_dialog.querySelector(\"#yes_delete_dialog\");\nyes_delete_dialog.addEventListener(\"click\", () => delete_dialog.close(\"Yes\"));\n\n//update dialog\nconst create_update_dialog = document.getElementById(\"create_update_dialog\");\ncreate_update_dialog\n  .querySelector(\"#yes_create_update_dialog\")\n  .addEventListener(\"click\", () => create_update_dialog.close(\"Yes\"));\ncreate_update_dialog\n  .querySelector(\"#no_create_update_dialog\")\n  .addEventListener(\"click\", () => create_update_dialog.close());\n\nconst title_input = create_update_dialog.querySelector(\"#update_title_holder\");\nconst author_input = create_update_dialog.querySelector(\"#update_author_holder\");\nconst year_published_input = create_update_dialog.querySelector(\"#update_year_holder\");\nconst ISBN_input = create_update_dialog.querySelector(\"#update_ISBN_holder\");\n\n//handle new book creation\nconst create_button = document.getElementById(\"create_button\");\ncreate_button.addEventListener(\"click\", () => {\n  create_update_dialog.showModal();\n\n  const dialog_close_handler = () => {\n    if (create_update_dialog.returnValue === \"Yes\") {\n      const new_book = {\n        title: title_input.value,\n        author: author_input.value,\n        year_published: year_published_input.value,\n        ISBN: ISBN_input.value,\n      };\n      handle_create_book(new_book);\n      create_update_dialog.removeEventListener(\"close\", dialog_close_handler);\n    }\n  };\n\n  create_update_dialog.addEventListener(\"close\", dialog_close_handler);\n});\n\nfetchPromise\n  .then((response) => response.json())\n  .then((data) => appendChild(data))\n  .catch((err) => {\n    // alert(\"Thanks for coming this far but database hosting is costly!!\");\n    console.error(err);\n  });\n\nfunction appendChild(data) {\n  const len = data.length;\n  for (let i = 0; i < len; i++) {\n    const list_cild = document.createElement(\"div\");\n    list_cild.classList.add(\"list_child_1\");\n    if (i % 2 == 0) {\n      list_cild.style.backgroundColor = \"grey\";\n      list_cild.style.color = \"white\";\n    }\n\n    const serial_no = document.createElement(\"p\");\n    serial_no.style.width = \"5%\";\n    serial_no.textContent = `${i + 1}.`;\n    list_cild.appendChild(serial_no);\n\n    const title = document.createElement(\"p\");\n    title.textContent = `${data[i].title}`;\n    list_cild.appendChild(title);\n\n    const author = document.createElement(\"p\");\n    author.textContent = `${data[i].author}`;\n    list_cild.appendChild(author);\n\n    const year_published = document.createElement(\"p\");\n    year_published.textContent = `${data[i].year_published}`;\n    list_cild.appendChild(year_published);\n\n    const ISBN = document.createElement(\"p\");\n    ISBN.textContent = `${data[i].ISBN}`;\n    list_cild.appendChild(ISBN);\n\n    //update button\n    const update_button = document.createElement(\"button\");\n    update_button.classList.add(\"update_btn\");\n    update_button.textContent = \"Update\";\n    list_cild.appendChild(update_button);\n\n    //listen for update events\n    update_button.addEventListener(\"click\", () => {\n      create_update_dialog.showModal();\n\n      //fill book details in dialog box.\n      title_input.value = data[i].title;\n      author_input.value = data[i].author;\n      year_published_input.value = data[i].year_published;\n      ISBN_input.value = data[i].ISBN;\n\n      const dialog_close_handler = () => {\n        if (create_update_dialog.returnValue === \"Yes\") {\n          const new_book = {\n            id: data[i].id,\n            title: title_input.value,\n            author: author_input.value,\n            year_published: year_published_input.value,\n            ISBN: ISBN_input.value,\n          };\n          handle_update_book(new_book);\n          create_update_dialog.removeEventListener(\"close\", dialog_close_handler);\n        }\n      };\n      //handle close and get data from dialog box\n      create_update_dialog.addEventListener(\"close\", dialog_close_handler);\n    });\n\n    //delete button\n    const delete_button = document.createElement(\"button\");\n    delete_button.classList.add(\"delete_btn\");\n    delete_button.textContent = \"Delete\";\n    list_cild.appendChild(delete_button);\n\n    //listen for delete events.\n    delete_button.addEventListener(\"click\", () => {\n      delete_dialog.showModal();\n\n      const dialog_close_handler = async () => {\n        if (delete_dialog.returnValue === \"Yes\") {\n          await handle_delete_book(data[i].id);\n          delete_dialog.removeEventListener(\"close\", dialog_close_handler);\n        }\n      };\n\n      //get the returnvalue.\n      delete_dialog.addEventListener(\"close\", dialog_close_handler);\n    });\n\n    list_div[0].appendChild(list_cild);\n  }\n}\n\nconst handle_delete_book = async (id) => {\n  try {\n    const response = await fetch(`${baseURL}/api/books?id=${id}`, {\n      method: \"DELETE\",\n    });\n    if (!response.ok) {\n      throw new Error(\"Error deleting the book\");\n    }\n    console.log(\"Book deleted successfully\", await response.json());\n  } catch (err) {\n    // alert(\"Database hosting is costly\");\n    console.error(err);\n  }\n};\n\nconst handle_update_book = async ({ id, title, author, year_published, ISBN }) => {\n  const new_book = {\n    title: title,\n    author: author,\n    year_published: parseInt(year_published),\n    ISBN: ISBN,\n  };\n  try {\n    const response = await fetch(`${baseURL}/api/books?id=${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(new_book),\n    });\n    if (!response.ok) {\n      throw new Error(\"Error updating the book\");\n    }\n    console.log(\"Book updated successfully\", await response.json());\n  } catch (err) {\n    // alert(\"Database hosting is costly\");\n    console.error(err);\n  }\n};\n\nconst handle_create_book = async ({ title, author, year_published, ISBN }) => {\n  const new_book = {\n    title: title,\n    author: author,\n    year_published: parseInt(year_published),\n    ISBN: ISBN,\n  };\n  try {\n    const response = await fetch(`${baseURL}/api/books`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(new_book),\n    });\n    const result = await response.json();\n    console.log(\"Book created successfully\", result);\n    if (!response.ok) {\n      throw new Error(\"Error creating book\", result);\n    }\n  } catch (err) {\n    // alert(\"Database hosting is costly\");\n    console.error(err);\n  }\n};\n"
  ]
}
